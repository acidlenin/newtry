{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","descriptionBlock","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","savePhoto","isOwner","profile","content","src","photos","large","userPhoto","mainPhoto","type","target","files","length","Post","item","message","likecount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","posts","MyPosts","memo","postsElements","profilePage","data","map","p","likesCount","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.6352cca6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2GKIe\",\"posts\":\"ProfileInfo_posts__1ne6I\",\"item\":\"ProfileInfo_item__1aDRF\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2-Nw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Profile_posts__12PSm\",\"item\":\"Profile_item__2MAR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__HjK7o\",\"posts\":\"MyPosts_posts__1ODOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__l8gSF\",\"item\":\"Post_item__3N20y\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(()=> {\r\n\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n   const activateEditMod = () => {\r\n        setEditMode(true);\r\n   };\r\n\r\n    const deactivateEditMod = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n            <div className={s.descriptionBlock}>\r\n                <span onDoubleClick={activateEditMod}>{props.status || \"-----\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div className={s.descriptionBlock}>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMod}\r\n                       value={status}/>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user1.png\";\r\n\r\n\r\nconst ProfileInfo = ({savePhoto, isOwner, profile, status, updateStatus}) => {\r\n\r\n    const onMainPhotoSelected = (e) => {\r\nif (e.target.files.length){\r\n    savePhoto(e.target.files[0]);\r\n}\r\n    }\r\n\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  return <div className={s.content}>\r\n   <div className={s.descriptionBlock}>\r\n\r\n\r\n    <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n       {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n    </div>\r\n  </div>\r\n\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n      <div className={s.item}>\r\n      <img src='https://tvbesedka.com/upload/2018/8/17/0/14/28/32634856-ec7c-4ef2-9d04-c1a2325dac76.jpg'/>\r\n      { props.message }\r\n      <div> and like count is </div>  \r\n      { props.likecount }\r\n      </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} placeholder={\"Post Message\"}/>\r\n        </div>\r\n        <div className={s.content}>\r\n            <div className={s.posts}>\r\n                <button>New post</button>\r\n            </div>\r\n        </div>\r\n    </form>;\r\n}\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.profilePage.data.map(p => <Post message={p.message} likecount={p.likesCount}/>);\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={addPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React, {createRef} from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div className={s.content}>\r\n        <ProfileInfo savePhoto={props.savePhoto}\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer store={props.store} />\r\n    </div>\r\n\r\n}\r\nexport default Profile;","    import React from 'react';\r\n    import Profile from \"./Profile\";\r\n    import {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../Redux/profile-reducer\";\r\n    import {withRouter} from \"react-router-dom\";\r\n    import {connect} from \"react-redux\";\r\n    import {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n    import {compose} from \"redux\";\r\n\r\n\r\n    class ProfileContainer extends React.Component {\r\n\r\n        refreshProfile() {\r\n            let userId = this.props.match.params.userId;\r\n            if (!userId) {\r\n                userId = this.props.authorizedUserId;\r\n                if (!userId) {\r\n                    this.props.history.push(\"/login\");\r\n                }\r\n            }\r\n\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.refreshProfile();\r\n        }\r\n\r\n        componentDidUpdate(prevProps, prevState, snapshot) {\r\n            if (this.props.match.params.userId != prevProps.match.params.userId){\r\n                this.refreshProfile();\r\n            }\r\n\r\n        }\r\n\r\n        render() {\r\n\r\n            return (<div>\r\n                <Profile {...this.props}\r\n                         isOwner={!!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.updateStatus}/>\r\n            </div>)\r\n        }\r\n\r\n    }\r\n\r\n    let mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.userId,\r\n        isAuth: state.auth.isAuth,\r\n    });\r\n\r\n    export default compose(\r\n        connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n        withRouter,\r\n        withAuthRedirect\r\n    )(ProfileContainer)\r\n\r\n"],"sourceRoot":""}